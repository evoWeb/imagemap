{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","initializeElement","initializeColorPicker","initializeEvents","initializeButtons","updateValues","element","getFormElement","constructor","name","toLowerCase","form","areaZone","appendChild","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","on","moved","getElements","button","firstChild","lastChild","that","field","value","width","left","height","top","hasOwnProperty","event","console","log","openPopup","currentTarget","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","contains","push","length","Rect","Circle","coords","getCoords","x","radius","y","Poly","points","point","index","append","parentNode","positionOptions","insertBefore","Polygon","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","indexOf","newIndex","parent","removedArea","splice","childNodes","link","blur","data","window","imagemap","browseLink","objectId","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","vHWin","open","focus","xml","toAreaXml","options","cornerColor","cornerStrokeColor","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","preview","option","scaling","parseInt","scaleFactor","configuration","getRandomColor","split","right","bottom","areaConfig","hasControls","stroke","strokeWidth","fill","addArea","setControlVisible","coordsXY","i","Error","xy","Math","min","undefined","floor","random","toString","hex","alpha","chars","test","substring","rgba","numbers","rgb","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(Object.getOwnPropertySymbols(source))\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement {\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.initializeEvents();\n\t\t\tthis.initializeButtons();\n\t\t\tthis.updateValues();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.constructor.name.toLowerCase() + 'Form');\n\t\t\tthis.form.areaZone.appendChild(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('#colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.appendChild(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.moved.bind(this));\n\t\t}\n\n\t\tinitializeButtons() {\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateValues() {\n\t\t\tlet that = this;\n\t\t\tthis.getElements('.t3js-field').forEach(function (field) {\n\t\t\t\tswitch (field.id) {\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tfield.style.backgroundColor = that.color;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tfield.value = that.width + that.left;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\tfield.value = that.height + that.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfield.value =\n\t\t\t\t\t\t\tthat.hasOwnProperty(field.id) && that[field.id] ?\n\t\t\t\t\t\t\t\tthat[field.id] :\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tthat.hasOwnProperty('attributes') && that['attributes'].hasOwnProperty(field.id) && this['attributes'][field.id] ?\n\t\t\t\t\t\t\t\t\t\tthat['attributes'][field.id] :\n\t\t\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tmoved(event) {\n\t\t\tconsole.log(event);\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openPopup(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.constructor.name.toLowerCase() + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('#link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [this.left, this.top, (this.left + this.width), (this.height + this.top)].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet coords = this.getCoords(),\n\t\t\t\tleft = coords[0].x + this.radius,\n\t\t\t\ttop = coords[0].y + this.radius;\n\t\t\treturn left + ',' + top + ',' + this.radius;\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\n\t\t}\n\n\n\t\tinitializeValues() {\n\t\t\tsuper.updateValues();\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = this.id + '_' + index;\n\t\t\t\tlet element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\t\t\t\tthis.append(element);\n\t\t\t});\n\t\t}\n\n\t\taddBeforeAction() {\n\t\t}\n\n\t\taddAfterAction() {\n\t\t}\n\n\t\tremoveAction(event) {\n\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\tpoints = [];\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t}\n\t\t\t});\n\t\t\telement.remove();\n\t\t\tthis.points = points;\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tprepend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.firstChild);\n\t\t}\n\n\t\tappend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.lastChild);\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.areas.length) {\n\t\t\t\tlet removedArea = this.areas.splice(index, 1)[0];\n\t\t\t\tthis.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenPopup(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = window.imagemap.browseLink;\n\t\t\tdata.objectId = area.id;\n\t\t\tdata.currentValue = area.getLink();\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done(function (response) {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\tpreview = false;\n\n\t\tconstructor(canvas, form, options) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvas, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\t\t\tif (!this.preview) {\n\t\t\t\tthis.form = new AreaForm(form, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeScaling(scaling) {\n\t\t\tlet width = parseInt(scaling) / this.canvas.width,\n\t\t\t\theight = parseInt(scaling) / this.canvas.height;\n\t\t\treturn (width > height) ? height : width;\n\t\t}\n\t\tsetScale(scaling) {\n\t\t\tthis.scaleFactor = scaling > 1 ? 1 : scaling;\n\t\t}\n\t\tgetMaxWidth() {\n\t\t\treturn this.scaleFactor * this.canvas.width;\n\t\t}\n\t\tgetMaxHeight() {\n\t\t\treturn this.scaleFactor * this.canvas.height;\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}