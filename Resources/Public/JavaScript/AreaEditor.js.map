{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","initializeElement","initializeValues","initializeButtons","initializeColorPicker","element","getFormElement","shape","form","areaZone","insertBefore","firstChild","initializeArrows","that","getElements","field","style","backgroundColor","color","value","width","left","height","top","hasOwnProperty","button","addEventListener","bind","colorPicker","getElement","values","b","g","r","cell","document","createElement","classList","add","colorPickerAction","appendChild","lastChild","event","openPopup","currentTarget","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","contains","push","length","Rect","Circle","coords","getCoords","x","radius","y","Poly","points","point","index","append","parentNode","positionOptions","Polygon","AreaForm","formElement","areas","area","postAddToForm","currentArea","link","blur","data","window","imagemap","browseLink","objectId","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","vHWin","open","focus","xml","toAreaXml","options","cornerColor","cornerStrokeColor","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","preview","option","scaling","parseInt","scaleFactor","configuration","getRandomColor","split","right","bottom","areaConfig","hasControls","stroke","strokeWidth","fill","addArea","setControlVisible","coordsXY","i","Error","xy","Math","min","undefined","floor","random","toString","hex","alpha","chars","test","substring","rgba","numbers","rgb","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(Object.getOwnPropertySymbols(source))\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tshape = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeValues();\n\t\t\tthis.initializeButtons();\n\t\t\tthis.initializeColorPicker();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.shape + 'Form');\n\t\t\tthis.form.areaZone.insertBefore(this.element, this.form.areaZone.firstChild);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeValues() {\n\t\t\tlet that = this;\n\t\t\tthis.getElements('.t3js-field').forEach(function (field) {\n\t\t\t\tswitch (field.id) {\n\t\t\t\t\tcase 'color':\n\t\t\t\t\t\tfield.style.backgroundColor = that.color;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\tfield.value = that.width + that.left;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\tfield.value = that.height + that.top;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfield.value =\n\t\t\t\t\t\t\tthat.hasOwnProperty(field.id) && that[field.id] ?\n\t\t\t\t\t\t\tthat[field.id] :\n\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\tthat.hasOwnProperty('attributes') && that['attributes'].hasOwnProperty(field.id) && this['attributes'][field.id] ?\n\t\t\t\t\t\t\t\tthat['attributes'][field.id] :\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tinitializeButtons() {\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('#colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 0; b < 6; b++) {\n\t\t\t\tfor (let g = 0; g < 6; g++) {\n\t\t\t\t\tfor (let r = 0; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.appendChild(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openPopup(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t}\n\n\t\tdownAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.shape + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('#link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tshape = 'rect';\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [this.left, this.top, (this.left + this.width), (this.height + this.top)].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tshape = 'circle';\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet coords = this.getCoords(),\n\t\t\t\tleft = coords[0].x + this.radius,\n\t\t\t\ttop = coords[0].y + this.radius;\n\t\t\treturn left + ',' + top + ',' + this.radius;\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tshape = 'poly';\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tgetAreaCoords() {\n\n\t\t}\n\n\n\t\tinitializeValues() {\n\t\t\tsuper.initializeValues();\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = this.id + '_' + index;\n\t\t\t\tlet element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\t\t\t\tthis.append(element);\n\t\t\t});\n\t\t}\n\n\t\taddBeforeAction() {\n\t\t}\n\n\t\taddAfterAction() {\n\t\t}\n\n\t\tremoveAction(event) {\n\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\tpoints = [];\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t}\n\t\t\t});\n\t\t\telement.remove();\n\t\t\tthis.points = points;\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tprepend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.firstChild);\n\t\t}\n\n\t\tappend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.lastChild);\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\topenPopup(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = window.imagemap.browseLink;\n\t\t\tdata.objectId = area.id;\n\t\t\tdata.currentValue = area.getLink();\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done(function (response) {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\tpreview = false;\n\n\t\tconstructor(canvas, form, options) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvas, options.canvas);\n\t\t\tif (!this.preview) {\n\t\t\t\tthis.form = new AreaForm(form, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeScaling(scaling) {\n\t\t\tlet width = parseInt(scaling) / this.canvas.width,\n\t\t\t\theight = parseInt(scaling) / this.canvas.height;\n\t\t\treturn (width > height) ? height : width;\n\t\t}\n\t\tsetScale(scaling) {\n\t\t\tthis.scaleFactor = scaling > 1 ? 1 : scaling;\n\t\t}\n\t\tgetMaxWidth() {\n\t\t\treturn this.scaleFactor * this.canvas.width;\n\t\t}\n\t\tgetMaxHeight() {\n\t\t\treturn this.scaleFactor * this.canvas.height;\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}