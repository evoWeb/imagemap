{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","_len","arguments","length","mixins","Array","_key","base","_baseClass","_getPrototypeOf2","_this","_classCallCheck","this","_len2","args","_key2","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","forEach","mixin","copyProperties","_assertThisInitialized","_inherits","target","source","propertySymbols","Object","getOwnPropertySymbols","getOwnPropertyNames","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","_fabric$Object","_getPrototypeOf3","_this2","_len3","_key3","_defineProperty","_createClass","key","value","id","__uid","hasOwnProperty","attributes","initializeElement","initializeColorPicker","updateFields","initializeEvents","element","getFormElement","name","form","areaZone","append","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","that","on","getElements","field","event","clearTimeout","eventDelay","setTimeout","updateCanvas","button","firstChild","lastChild","currentTarget","contains","link","openLinkBrowser","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","Rect","_Aggregation","_getPrototypeOf4","_this3","_len4","_key4","_this4","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","_Aggregation2","_getPrototypeOf5","_this5","_len5","_key5","_this6","getRadiusX","radius","Poly","_Aggregation3","_getPrototypeOf6","_this7","_len6","_key6","Polygon","_this8","parentElement","points","point","index","x","y","_slicedToArray","split","control","controls","getCenterPoint","indexOf","setCoords","center","areaConfig","_this9","addControl","get","polygon","circle","_objectSpread","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","pointMoved","currentTabId","firstPoint","lastPoint","_this10","parentNode","oldId","setAttribute","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","window","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","open","focus","xml","toAreaXml","options","canvasSelector","formSelector","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","undefined","preview","option","scaling","setZoom","getZoom","_this11","shape","addRect","addCircle","addPoly","deleteAction","configuration","getRandomColor","_configuration$coords2","coords","right","bottom","selectable","strokeWidth","addArea","_configuration$coords4","setControlVisible","coordsXY","i","Error","xy","min","objectCaching","addControls","syncAreaLinkValue","random","toString","hex","alpha","chars","test","substring","rgba","numbers","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\t/** @type {Array} */\n\t\t\tlet propertySymbols = Object.getOwnPropertySymbols(source);\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(propertySymbols)\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement extends fabric.Object {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tname = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.name + 'Form');\n\t\t\tthis.form.areaZone.append(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('.colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.append(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tlet that = this;\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', function(event) {\n\t\t\t\t\tclearTimeout(that.eventDelay);\n\t\t\t\t\tthat.eventDelay = setTimeout(() => { that.updateCanvas(event); }, 500);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', this['updateProperties'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.name + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tname = 'rect';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth() - 1),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight() - 1)\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tname = 'circle';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tname = 'poly';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tlet parentElement = this.getElement('.positionOptions');\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\n\t\t\t\tif (!point.hasOwnProperty('element')) {\n\t\t\t\t\tpoint.element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tparentElement.append(point.element);\n\t\t\t\t}\n\n\t\t\t\tpoint.element.querySelector('#x' + point.id).value = point.x;\n\t\t\t\tpoint.element.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tcontrol.setCoords();\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.pointMoved.bind(this));\n\t\t\tthis.controls[index] = circle;\n\t\t\tthis.canvas.add(circle);\n\t\t}\n\n\t\tpointMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name,\n\t\t\t\tcenter = point.getCenterPoint();\n\n\t\t\tthis.getElement('#x' + id).value = center.x;\n\t\t\tthis.getElement('#y' + id).value = center.y;\n\t\t}\n\n\t\taddPointAction() {\n\t\t\tlet index = this.points.length,\n\t\t\t\tfirstPoint = this.points[0],\n\t\t\t\tlastPoint = this.points[index - 1],\n\t\t\t\tid = 'p' + this.id + '_' + index,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\telement = this.getFormElement('#polyCoords', id),\n\t\t\t\tpoint = {\n\t\t\t\t\tx: (firstPoint.x + lastPoint.x) / 2,\n\t\t\t\t\ty: (firstPoint.y + lastPoint.y) / 2,\n\t\t\t\t\tid: id,\n\t\t\t\t\telement: element\n\t\t\t\t};\n\n\t\t\telement.querySelectorAll('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\n\t\t\tparentElement.append(element);\n\n\t\t\tthis.points.push(point);\n\t\t\tthis.addControl(this.form.editor.areaConfig, point, index);\n\t\t}\n\n\t\tremovePointAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [],\n\t\t\t\t\tcontrols = [];\n\n\t\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t\tcontrols.push(this.controls[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoint.element.remove();\n\t\t\t\t\t\tthis.canvas.remove(this.controls[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpoints.forEach((point, index) => {\n\t\t\t\t\tlet oldId = point.id;\n\t\t\t\t\tpoint.id = 'p' + this.id + '_' + index;\n\t\t\t\t\tthis.getElement('#' + oldId).id = point.id;\n\t\t\t\t\tthis.getElement('#x' + oldId).id = 'x' + point.id;\n\t\t\t\t\tthis.getElement('#y' + oldId).id = 'y' + point.id;\n\t\t\t\t\tthis.getElement('[for=\"x' + oldId + '\"]').setAttribute('for', 'x' + point.id);\n\t\t\t\t\tthis.getElement('[for=\"y' + oldId + '\"]').setAttribute('for', 'y' + point.id);\n\t\t\t\t\tcontrols[index].name = index;\n\t\t\t\t});\n\n\t\t\t\tthis.points = points;\n\t\t\t\tthis.controls = controls;\n\t\t\t\tthis.canvas.renderAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\t/**\n\t\t * @type {AreaEditor}\n\t\t */\n\t\teditor = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.editor.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.editor.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.editor.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.editor.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.editor.areas.length) {\n\t\t\t\tlet removedArea = this.editor.areas.splice(index, 1)[0];\n\t\t\t\tthis.editor.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done((response) => {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tpreview = true;\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\tconstructor(options, canvasSelector, formSelector) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvasSelector, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\n\n\t\t\tif (formSelector !== undefined) {\n\t\t\t\tthis.preview = false;\n\t\t\t\tthis.form = new AreaForm(formSelector, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetScale(scaling) {\n\t\t\tthis.canvas.setZoom(this.canvas.getZoom() * (scaling ? scaling : 1));\n\t\t}\n\n\t\tinitializeAreas(areas) {\n\t\t\tareas.forEach((area) => {\n\t\t\t\tswitch (area.shape) {\n\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\tthis.addRect(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\tthis.addCircle(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\tthis.addPoly(area);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tremoveAllAreas() {\n\t\t\tthis.areas.forEach((area) => { area.deleteAction(); });\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tarea.addControls(this.areaConfig);\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}