{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","hasOwnProperty","attributes","initializeElement","initializeColorPicker","updateFields","initializeEvents","element","getFormElement","constructor","name","toLowerCase","form","areaZone","appendChild","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","on","getElements","field","event","clearTimeout","eventDelay","setTimeout","updateCanvas","button","firstChild","lastChild","currentTarget","contains","link","value","openLinkBrowser","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","length","Rect","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","getRadiusX","radius","Poly","points","point","index","append","x","y","split","control","controls","getCenterPoint","indexOf","center","areaConfig","addControl","get","polygon","circle","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","coordMoved","currentTabId","parentNode","positionOptions","insertBefore","Polygon","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","window","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","vHWin","open","focus","xml","toAreaXml","options","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","preview","option","scaling","scaleFactor","configuration","getRandomColor","coords","right","bottom","strokeWidth","addArea","setControlVisible","coordsXY","i","Error","xy","min","selectable","objectCaching","addControls","syncAreaLinkValue","undefined","random","toString","hex","alpha","chars","test","substring","rgba","numbers","rgb","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(Object.getOwnPropertySymbols(source))\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement {\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.constructor.name.toLowerCase() + 'Form');\n\t\t\tthis.form.areaZone.appendChild(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('.colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.appendChild(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', function(event) {\n\t\t\t\t\tclearTimeout(this.eventDelay);\n\t\t\t\t\tthis.eventDelay = setTimeout(() => {this.updateCanvas(event);}, 500);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', this['updateProperties'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.constructor.name.toLowerCase() + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth()),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\t\t\t\tlet element = this.getElement('#' + point.id);\n\n\t\t\t\tif (element === null) {\n\t\t\t\t\telement = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tthis.append(element);\n\t\t\t\t}\n\n\t\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.coordMoved.bind(this));\n\t\t\tthis.controls[index] = circle;\n\t\t\tthis.canvas.add(circle);\n\t\t}\n\n\t\tcoordMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name;\n\n\t\t\tthis.getElement('#x' + id).value = point.getCenterPoint().x;\n\t\t\tthis.getElement('#y' + id).value = point.getCenterPoint().y;\n\t\t}\n\n\t\taddBeforeAction() {\n\t\t}\n\n\t\taddAfterAction() {\n\t\t}\n\n\t\tremoveAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\t// @todo remove controls\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [];\n\t\t\t\tthis.points.forEach((point) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\telement.remove();\n\t\t\t\tthis.points = points;\n\t\t\t}\n\t\t}\n\n\t\tprepend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.firstChild);\n\t\t}\n\n\t\tappend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.lastChild);\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.areas.length) {\n\t\t\t\tlet removedArea = this.areas.splice(index, 1)[0];\n\t\t\t\tthis.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done(function (response) {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\tpreview = false;\n\n\t\tconstructor(canvas, form, options) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvas, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\t\t\tif (!this.preview) {\n\t\t\t\tthis.form = new AreaForm(form, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeScaling(scaling) {\n\t\t\tlet width = parseInt(scaling) / this.canvas.width,\n\t\t\t\theight = parseInt(scaling) / this.canvas.height;\n\t\t\treturn (width > height) ? height : width;\n\t\t}\n\t\tsetScale(scaling) {\n\t\t\tthis.scaleFactor = scaling > 1 ? 1 : scaling;\n\t\t}\n\t\tgetMaxWidth() {\n\t\t\treturn this.scaleFactor * this.canvas.width;\n\t\t}\n\t\tgetMaxHeight() {\n\t\t\treturn this.scaleFactor * this.canvas.height;\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tarea.addControls(this.areaConfig);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}