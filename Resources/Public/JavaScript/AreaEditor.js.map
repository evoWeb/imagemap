{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","_len","arguments","length","mixins","Array","_key","base","_baseClass","_getPrototypeOf2","_this","_classCallCheck","this","_len2","args","_key2","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","forEach","mixin","copyProperties","_assertThisInitialized","_inherits","target","source","propertySymbols","Object","getOwnPropertySymbols","getOwnPropertyNames","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","_fabric$Object","_getPrototypeOf3","_this2","_len3","_key3","_defineProperty","_createClass","key","value","id","__uid","hasOwnProperty","attributes","initializeElement","updateFields","initializeColorPicker","initializeEvents","element","getFormElement","name","form","areaZone","append","initializeArrows","getElement","minicolors","format","position","theme","changeDelay","change","colorPickerAction","bind","on","getElements","coordinateFieldHandler","attributeFieldHandler","buttonHandler","field","addEventListener","fieldKeyUpHandler","event","_this3","clearTimeout","eventDelay","wait","updateCanvas","updateProperties","button","classList","firstChild","lastChild","currentTarget","contains","link","openLinkBrowser","moveArea","remove","editor","deleteArea","showElement","hideElement","set","AreaEditor","hexToRgbA","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","add","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","callback","delay","window","setTimeout","Rect","_Aggregation","_getPrototypeOf4","_this4","_len4","_key4","_this5","color","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","_Aggregation2","_getPrototypeOf5","_this6","_len5","_key5","_this7","getRadiusX","radius","Poly","_Aggregation3","_getPrototypeOf6","_this8","_len6","_key6","Polygon","_this9","parentElement","points","point","index","x","y","_slicedToArray","split","control","controls","getCenterPoint","indexOf","setCoords","center","areaConfig","_this10","addControl","get","polygon","circle","_objectSpread","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","pointMoved","currentTabId","firstPoint","lastPoint","_this11","parentNode","oldId","setAttribute","AreaForm","formElement","document","areas","area","postAddToForm","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","browseLink","objectId","itemName","currentValue","ajax","url","browseLinkUrlAjaxUrl","context","done","response","open","focus","options","canvasSelector","formSelector","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","undefined","preview","option","scaling","setZoom","getZoom","_this12","shape","addRect","addCircle","addPoly","deleteAction","configuration","getRandomColor","_configuration$coords2","coords","right","bottom","selectable","strokeWidth","addArea","_configuration$coords4","setControlVisible","coordsXY","i","Error","xy","min","objectCaching","addControls","syncAreaLinkValue","currentArea","xml","toAreaXml","r","random","toString","g","b","hex","alpha","chars","test","substring"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define([\n\t'jquery',\n\t'TYPO3/CMS/Imagemap/Fabric',\n\t'TYPO3/CMS/Core/Contrib/jquery.minicolors'\n], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\t/** @type {Array} */\n\t\t\tlet propertySymbols = Object.getOwnPropertySymbols(source);\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(propertySymbols)\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement extends fabric.Object {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tname = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.name + 'Form');\n\t\t\tthis.form.areaZone.append(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\t$(this.getElement('.t3js-color-picker')).minicolors({\n\t\t\t\tformat: 'hex',\n\t\t\t\tposition: 'left',\n\t\t\t\ttheme: 'default',\n\t\t\t\tchangeDelay: 100,\n\t\t\t\tchange: this.colorPickerAction.bind(this)\n\t\t\t});\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(this.coordinateFieldHandler.bind(this));\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(this.attributeFieldHandler.bind(this));\n\t\t\tthis.getElements('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\t\t}\n\n\t\tcoordinateFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.fieldKeyUpHandler.bind(this));\n\t\t}\n\n\t\tfieldKeyUpHandler(event) {\n\t\t\tclearTimeout(this.eventDelay);\n\t\t\tthis.eventDelay = AreaFormElement.wait(() => { this.updateCanvas(event); }, 500);\n\t\t}\n\n\t\tattributeFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.updateProperties.bind(this));\n\t\t}\n\n\t\tbuttonHandler(button) {\n\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tif (this.element) {\n\t\t\t\tthis.element.remove();\n\t\t\t}\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.initializeArrows();\n\t\t\t}\n\t\t\tthis.editor.deleteArea(this);\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(value) {\n\t\t\tthis.getElement('.t3js-color-picker').value = value;\n\t\t\tthis.set('borderColor', value);\n\t\t\tthis.set('stroke', value);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(value, 0.2));\n\t\t\tthis.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.name + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\n\t\tstatic wait(callback, delay) {\n\t\t\treturn window.setTimeout(callback, delay);\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tname = 'rect';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth() - 1),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight() - 1)\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tname = 'circle';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tname = 'poly';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tlet parentElement = this.getElement('.positionOptions');\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\n\t\t\t\tif (!point.hasOwnProperty('element')) {\n\t\t\t\t\tpoint.element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tparentElement.append(point.element);\n\t\t\t\t}\n\n\t\t\t\tpoint.element.querySelector('#x' + point.id).value = point.x;\n\t\t\t\tpoint.element.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tcontrol.setCoords();\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.pointMoved.bind(this));\n\t\t\tthis.controls[index] = circle;\n\t\t\tthis.canvas.add(circle);\n\t\t}\n\n\t\tpointMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name,\n\t\t\t\tcenter = point.getCenterPoint();\n\n\t\t\tthis.getElement('#x' + id).value = center.x;\n\t\t\tthis.getElement('#y' + id).value = center.y;\n\t\t}\n\n\t\taddPointAction() {\n\t\t\tlet index = this.points.length,\n\t\t\t\tfirstPoint = this.points[0],\n\t\t\t\tlastPoint = this.points[index - 1],\n\t\t\t\tid = 'p' + this.id + '_' + index,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\telement = this.getFormElement('#polyCoords', id),\n\t\t\t\tpoint = {\n\t\t\t\t\tx: (firstPoint.x + lastPoint.x) / 2,\n\t\t\t\t\ty: (firstPoint.y + lastPoint.y) / 2,\n\t\t\t\t\tid: id,\n\t\t\t\t\telement: element\n\t\t\t\t};\n\n\t\t\telement.querySelectorAll('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\n\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\n\t\t\tparentElement.append(element);\n\n\t\t\tthis.points.push(point);\n\t\t\tthis.addControl(this.editor.areaConfig, point, index);\n\t\t}\n\n\t\tremovePointAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [],\n\t\t\t\t\tcontrols = [];\n\n\t\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t\tcontrols.push(this.controls[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoint.element.remove();\n\t\t\t\t\t\tthis.canvas.remove(this.controls[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpoints.forEach((point, index) => {\n\t\t\t\t\tlet oldId = point.id;\n\t\t\t\t\tpoint.id = 'p' + this.id + '_' + index;\n\t\t\t\t\tthis.getElement('#' + oldId).id = point.id;\n\t\t\t\t\tthis.getElement('#x' + oldId).id = 'x' + point.id;\n\t\t\t\t\tthis.getElement('#y' + oldId).id = 'y' + point.id;\n\t\t\t\t\tthis.getElement('[for=\"x' + oldId + '\"]').setAttribute('for', 'x' + point.id);\n\t\t\t\t\tthis.getElement('[for=\"y' + oldId + '\"]').setAttribute('for', 'y' + point.id);\n\t\t\t\t\tcontrols[index].name = index;\n\t\t\t\t});\n\n\t\t\t\tthis.points = points;\n\t\t\t\tthis.controls = controls;\n\t\t\t\tthis.canvas.renderAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\t/**\n\t\t * @type {AreaEditor}\n\t\t */\n\t\teditor = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.editor.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.editor.areas.length) {\n\t\t\t\tlet removedArea = this.editor.areas.splice(index, 1)[0];\n\t\t\t\tthis.editor.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...this.editor.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: this.editor.browseLinkUrlAjaxUrl,\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done((response) => {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tbrowseLinkUrlAjaxUrl = '';\n\n\t\t/**\n\t\t * @type {object}\n\t\t */\n\t\tbrowseLink = null;\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tpreview = true;\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\tconstructor(options, canvasSelector, formSelector) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvasSelector, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\n\t\t\tif (formSelector !== undefined) {\n\t\t\t\tthis.preview = false;\n\t\t\t\tthis.form = new AreaForm(formSelector, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetScale(scaling) {\n\t\t\tthis.canvas.setZoom(this.canvas.getZoom() * (scaling ? scaling : 1));\n\t\t}\n\n\t\tinitializeAreas(areas) {\n\t\t\tareas.forEach((area) => {\n\t\t\t\tswitch (area.shape) {\n\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\tthis.addRect(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\tthis.addCircle(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\tthis.addPoly(area);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tremoveAllAreas() {\n\t\t\tthis.areas.forEach((area) => { area.deleteAction(); });\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tarea.addControls(this.areaConfig);\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n\n"]}