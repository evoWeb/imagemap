{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","_len","arguments","length","mixins","Array","_key","base","_baseClass","_getPrototypeOf2","_this","_classCallCheck","this","_len2","args","_key2","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","forEach","mixin","copyProperties","_assertThisInitialized","_inherits","target","source","propertySymbols","Object","getOwnPropertySymbols","getOwnPropertyNames","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","_fabric$Object","_getPrototypeOf3","_this2","_len3","_key3","_defineProperty","_createClass","key","value","id","__uid","hasOwnProperty","attributes","initializeElement","initializeColorPicker","updateFields","initializeEvents","element","getFormElement","name","form","areaZone","append","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","that","on","getElements","field","event","clearTimeout","eventDelay","wait","updateCanvas","button","firstChild","lastChild","currentTarget","contains","link","openLinkBrowser","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","callback","delay","window","setTimeout","Rect","_Aggregation","_getPrototypeOf4","_this3","_len4","_key4","_this4","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","_Aggregation2","_getPrototypeOf5","_this5","_len5","_key5","_this6","getRadiusX","radius","Poly","_Aggregation3","_getPrototypeOf6","_this7","_len6","_key6","Polygon","_this8","parentElement","points","point","index","x","y","_slicedToArray","split","control","controls","getCenterPoint","indexOf","setCoords","center","areaConfig","_this9","addControl","get","polygon","circle","_objectSpread","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","pointMoved","currentTabId","firstPoint","lastPoint","_this10","parentNode","oldId","setAttribute","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","browseLinkUrlAjaxUrl","context","done","response","open","focus","xml","toAreaXml","options","canvasSelector","formSelector","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","undefined","preview","option","scaling","setZoom","getZoom","_this11","shape","addRect","addCircle","addPoly","deleteAction","configuration","getRandomColor","_configuration$coords2","coords","right","bottom","selectable","strokeWidth","addArea","_configuration$coords4","setControlVisible","coordsXY","i","Error","xy","min","objectCaching","addControls","syncAreaLinkValue","random","toString","hex","alpha","chars","test","substring","rgba","numbers","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\t/** @type {Array} */\n\t\t\tlet propertySymbols = Object.getOwnPropertySymbols(source);\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(propertySymbols)\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement extends fabric.Object {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tname = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.name + 'Form');\n\t\t\tthis.form.areaZone.append(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('.colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.append(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tlet that = this;\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', function(event) {\n\t\t\t\t\tclearTimeout(that.eventDelay);\n\t\t\t\t\tthat.eventDelay = AreaFormElement.wait(() => { that.updateCanvas(event); }, 500);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', this['updateProperties'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.name + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\n\t\tstatic wait(callback, delay) {\n\t\t\treturn window.setTimeout(callback, delay);\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tname = 'rect';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth() - 1),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight() - 1)\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tname = 'circle';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tname = 'poly';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tlet parentElement = this.getElement('.positionOptions');\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\n\t\t\t\tif (!point.hasOwnProperty('element')) {\n\t\t\t\t\tpoint.element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tparentElement.append(point.element);\n\t\t\t\t}\n\n\t\t\t\tpoint.element.querySelector('#x' + point.id).value = point.x;\n\t\t\t\tpoint.element.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tcontrol.setCoords();\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.pointMoved.bind(this));\n\t\t\tthis.controls[index] = circle;\n\t\t\tthis.canvas.add(circle);\n\t\t}\n\n\t\tpointMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name,\n\t\t\t\tcenter = point.getCenterPoint();\n\n\t\t\tthis.getElement('#x' + id).value = center.x;\n\t\t\tthis.getElement('#y' + id).value = center.y;\n\t\t}\n\n\t\taddPointAction() {\n\t\t\tlet index = this.points.length,\n\t\t\t\tfirstPoint = this.points[0],\n\t\t\t\tlastPoint = this.points[index - 1],\n\t\t\t\tid = 'p' + this.id + '_' + index,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\telement = this.getFormElement('#polyCoords', id),\n\t\t\t\tpoint = {\n\t\t\t\t\tx: (firstPoint.x + lastPoint.x) / 2,\n\t\t\t\t\ty: (firstPoint.y + lastPoint.y) / 2,\n\t\t\t\t\tid: id,\n\t\t\t\t\telement: element\n\t\t\t\t};\n\n\t\t\telement.querySelectorAll('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\n\t\t\tparentElement.append(element);\n\n\t\t\tthis.points.push(point);\n\t\t\tthis.addControl(this.form.editor.areaConfig, point, index);\n\t\t}\n\n\t\tremovePointAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [],\n\t\t\t\t\tcontrols = [];\n\n\t\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t\tcontrols.push(this.controls[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoint.element.remove();\n\t\t\t\t\t\tthis.canvas.remove(this.controls[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpoints.forEach((point, index) => {\n\t\t\t\t\tlet oldId = point.id;\n\t\t\t\t\tpoint.id = 'p' + this.id + '_' + index;\n\t\t\t\t\tthis.getElement('#' + oldId).id = point.id;\n\t\t\t\t\tthis.getElement('#x' + oldId).id = 'x' + point.id;\n\t\t\t\t\tthis.getElement('#y' + oldId).id = 'y' + point.id;\n\t\t\t\t\tthis.getElement('[for=\"x' + oldId + '\"]').setAttribute('for', 'x' + point.id);\n\t\t\t\t\tthis.getElement('[for=\"y' + oldId + '\"]').setAttribute('for', 'y' + point.id);\n\t\t\t\t\tcontrols[index].name = index;\n\t\t\t\t});\n\n\t\t\t\tthis.points = points;\n\t\t\t\tthis.controls = controls;\n\t\t\t\tthis.canvas.renderAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\t/**\n\t\t * @type {AreaEditor}\n\t\t */\n\t\teditor = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.editor.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.editor.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.editor.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.editor.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.editor.areas.length) {\n\t\t\t\tlet removedArea = this.editor.areas.splice(index, 1)[0];\n\t\t\t\tthis.editor.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: this.editor.browseLinkUrlAjaxUrl,\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done((response) => {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tbrowseLinkUrlAjaxUrl = '';\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tpreview = true;\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\tconstructor(options, canvasSelector, formSelector) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvasSelector, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\n\t\t\tif (formSelector !== undefined) {\n\t\t\t\tthis.preview = false;\n\t\t\t\tthis.form = new AreaForm(formSelector, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetScale(scaling) {\n\t\t\tthis.canvas.setZoom(this.canvas.getZoom() * (scaling ? scaling : 1));\n\t\t}\n\n\t\tinitializeAreas(areas) {\n\t\t\tareas.forEach((area) => {\n\t\t\t\tswitch (area.shape) {\n\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\tthis.addRect(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\tthis.addCircle(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\tthis.addPoly(area);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tremoveAllAreas() {\n\t\t\tthis.areas.forEach((area) => { area.deleteAction(); });\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tarea.addControls(this.areaConfig);\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}