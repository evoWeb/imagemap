{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","initializeElement","initializeColorPicker","initializeEvents","updateValues","element","getFormElement","constructor","name","toLowerCase","form","areaZone","appendChild","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","on","getElements","field","button","firstChild","lastChild","event","openLinkBrowser","currentTarget","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","contains","push","value","length","Rect","alt","link","Math","floor","left","top","getScaledWidth","getScaledHeight","hasOwnProperty","attributes","entries","attribute","console","log","Circle","getRadiusX","Poly","points","point","index","append","x","y","parentNode","positionOptions","insertBefore","Polygon","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","indexOf","newIndex","parent","removedArea","splice","childNodes","blur","data","window","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","vHWin","open","focus","parseInt","xml","toAreaXml","options","cornerColor","cornerStrokeColor","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","preview","option","scaling","width","height","scaleFactor","configuration","getRandomColor","coords","split","right","bottom","areaConfig","hasControls","stroke","strokeWidth","fill","addArea","radius","setControlVisible","coordsXY","i","Error","xy","min","syncAreaLinkValue","undefined","random","toString","hex","alpha","chars","test","substring","rgba","numbers","rgb","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(Object.getOwnPropertySymbols(source))\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement {\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.initializeEvents();\n\t\t\tthis.updateValues();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.constructor.name.toLowerCase() + 'Form');\n\t\t\tthis.form.areaZone.appendChild(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('#colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.appendChild(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateValues.bind(this));\n\t\t\tthis.on('modified', this.updateValues.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('changed', this['updateCanvas'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateValues() {\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.constructor.name.toLowerCase() + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tupdateValues() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tif (this.hasOwnProperty('attributes') && this.attributes) {\n\t\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tconsole.log(this);\n\t\t\tconsole.log(event);\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth()),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tupdateValues() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tif (this.hasOwnProperty('attributes') && this.attributes) {\n\t\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tconsole.log(this);\n\t\t\tconsole.log(event);\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tupdateValues() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tif (this.hasOwnProperty('attributes') && this.attributes) {\n\t\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\t\t\t\tlet element = this.getElement('#' + point.id);\n\n\t\t\t\tif (element === null) {\n\t\t\t\t\telement = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tthis.append(element);\n\t\t\t\t}\n\n\t\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tconsole.log(this);\n\t\t\tconsole.log(event);\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tresult.push(point.x);\n\t\t\t\tresult.push(point.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\n\t\taddBeforeAction() {\n\t\t}\n\n\t\taddAfterAction() {\n\t\t}\n\n\t\tremoveAction(event) {\n\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\tpoints = [];\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t}\n\t\t\t});\n\t\t\telement.remove();\n\t\t\tthis.points = points;\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tprepend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.firstChild);\n\t\t}\n\n\t\tappend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.lastChild);\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.areas.length) {\n\t\t\t\tlet removedArea = this.areas.splice(index, 1)[0];\n\t\t\t\tthis.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done(function (response) {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\tpreview = false;\n\n\t\tconstructor(canvas, form, options) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvas, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\t\t\tif (!this.preview) {\n\t\t\t\tthis.form = new AreaForm(form, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeScaling(scaling) {\n\t\t\tlet width = parseInt(scaling) / this.canvas.width,\n\t\t\t\theight = parseInt(scaling) / this.canvas.height;\n\t\t\treturn (width > height) ? height : width;\n\t\t}\n\t\tsetScale(scaling) {\n\t\t\tthis.scaleFactor = scaling > 1 ? 1 : scaling;\n\t\t}\n\t\tgetMaxWidth() {\n\t\t\treturn this.scaleFactor * this.canvas.width;\n\t\t}\n\t\tgetMaxHeight() {\n\t\t\treturn this.scaleFactor * this.canvas.height;\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}