{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","d","top","document","w","window","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","propertySymbols","Object","getOwnPropertySymbols","getOwnPropertyNames","concat","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","hasOwnProperty","attributes","initializeElement","updateFields","initializeColorPicker","initializeEvents","addFauxInput","element","getFormElement","name","form","areaZone","append","initializeArrows","getElement","minicolors","format","position","theme","changeDelay","change","colorPickerAction","bind","on","getElements","coordinateFieldHandler","attributeFieldHandler","buttonHandler","field","addEventListener","fieldKeyUpHandler","event","clearTimeout","eventDelay","wait","updateCanvas","updateProperties","button","classList","firstChild","lastChild","currentTarget","contains","link","value","openLinkBrowser","moveArea","remove","editor","deleteArea","removeFauxInput","showElement","hideElement","set","AreaEditor","hexToRgbA","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","add","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","length","fauxForm","fauxInput","fauxFormDocument","createElement","setAttribute","fauxInputChanged","appendChild","callback","delay","setTimeout","Rect","color","alt","Math","floor","left","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","getRadiusX","radius","Poly","parentElement","points","point","index","x","y","split","control","controls","getCenterPoint","indexOf","setCoords","center","areaConfig","addControl","get","polygon","newControlIndex","circle","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","pointMoved","addElementToArrayWithPosition","currentTabId","direction","before","getPointElementAndCurrentPoint","currentPointIndex","currentPoint","insertBefore","after","nextSibling","currentPointId","parentNode","getCurrentAndNextPoint","nextPoint","i","nextPointIndex","oldId","array","item","newPointIndex","unshift","newPoints","Polygon","AreaForm","formElement","addFauxFormForLinkBrowser","browseLink","removeFauxForm","areas","area","postAddToForm","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","objectId","itemName","currentValue","ajax","url","browseLinkUrlAjaxUrl","context","done","response","vHWin","open","focus","formName","fauxFormContainer","removeChild","options","canvasSelector","formSelector","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","preview","option","scaling","setZoom","getZoom","undefined","shape","addRect","addCircle","addPoly","deleteAction","configuration","getRandomColor","coords","right","bottom","selectable","strokeWidth","addArea","setControlVisible","coordsXY","Error","xy","min","objectCaching","addControls","createEvent","initEvent","dispatchEvent","currentArea","xml","toAreaXml","r","random","toString","g","b","hex","alpha","chars","test","substring"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define([\n\t'jquery',\n\t'TYPO3/CMS/Imagemap/Fabric',\n\t'TYPO3/CMS/Core/Contrib/jquery.minicolors'\n], ($, fabric) => {\n\t// needed to access top frame elements\n\tlet d = top.document || document,\n\t\tw = top.window || window;\n\tif (typeof d !== 'undefined' && typeof w !== 'undefined') {\n\t\tfabric.document = d;\n\t\tfabric.window = w;\n\t}\n\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\t/** @type {Array} */\n\t\t\tlet propertySymbols = Object.getOwnPropertySymbols(source);\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(propertySymbols)\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement extends fabric.Object {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tname = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tstatic before = -1;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\tstatic after = 1;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.initializeEvents();\n\t\t\tthis.addFauxInput();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.name + 'Form');\n\t\t\tthis.form.areaZone.append(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\t$(this.getElement('.t3js-color-picker')).minicolors({\n\t\t\t\tformat: 'hex',\n\t\t\t\tposition: 'left',\n\t\t\t\ttheme: 'default',\n\t\t\t\tchangeDelay: 100,\n\t\t\t\tchange: this.colorPickerAction.bind(this)\n\t\t\t});\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(this.coordinateFieldHandler.bind(this));\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(this.attributeFieldHandler.bind(this));\n\t\t\tthis.getElements('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\t\t}\n\n\t\tcoordinateFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.fieldKeyUpHandler.bind(this));\n\t\t}\n\n\t\tfieldKeyUpHandler(event) {\n\t\t\tclearTimeout(this.eventDelay);\n\t\t\tthis.eventDelay = AreaFormElement.wait(() => { this.updateCanvas(event); }, 500);\n\t\t}\n\n\t\tattributeFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.updateProperties.bind(this));\n\t\t}\n\n\t\tbuttonHandler(button) {\n\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tif (this.element) {\n\t\t\t\tthis.element.remove();\n\t\t\t}\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.initializeArrows();\n\t\t\t}\n\t\t\tthis.editor.deleteArea(this);\n\t\t\tthis.removeFauxInput();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(value) {\n\t\t\tthis.getElement('.t3js-color-picker').value = value;\n\t\t\tthis.set('borderColor', value);\n\t\t\tthis.set('stroke', value);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(value, 0.2));\n\t\t\tthis.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.name + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\n\t\t/**\n\t\t * Add faux input as target for browselink which listens for changes and writes value to real field\n\t\t */\n\t\taddFauxInput() {\n\t\t\tif (this.form.fauxForm !== null) {\n\t\t\t\tlet fauxInput = this.editor.fauxFormDocument.createElement('input');\n\t\t\t\tfauxInput.setAttribute('id', 'link' + this.id);\n\t\t\t\tfauxInput.setAttribute('data-formengine-input-name', 'link' + this.id);\n\t\t\t\tfauxInput.setAttribute('value', this.link);\n\t\t\t\tfauxInput.addEventListener('change', this.fauxInputChanged.bind(this));\n\t\t\t\tthis.form.fauxForm.appendChild(fauxInput);\n\t\t\t}\n\t\t}\n\n\t\tfauxInputChanged(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tthis.link = field.value;\n\t\t\tthis.updateFields();\n\t\t}\n\n\t\tremoveFauxInput() {\n\t\t\tif (this.form && this.form.fauxForm !== null) {\n\t\t\t\tlet field = this.form.fauxForm.querySelector('#link' + this.id);\n\t\t\t\tif (field) {\n\t\t\t\t\tfield.remove();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstatic wait(callback, delay) {\n\t\t\treturn window.setTimeout(callback, delay);\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tname = 'rect';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt || '';\n\t\t\tthis.getElement('.link').value = this.link || '';\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1] || '';\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth() - 1),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight() - 1)\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tname = 'circle';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt || '';\n\t\t\tthis.getElement('.link').value = this.link || '';\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1] || '';\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tname = 'poly';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').value = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt || '';\n\t\t\tthis.getElement('.link').value = this.link || '';\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1] || '';\n\t\t\t});\n\n\t\t\tlet parentElement = this.getElement('.positionOptions');\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\n\t\t\t\tif (!point.hasOwnProperty('element')) {\n\t\t\t\t\tpoint.element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tparentElement.append(point.element);\n\t\t\t\t}\n\n\t\t\t\tpoint.element.querySelector('#x' + point.id).value = point.x;\n\t\t\t\tpoint.element.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tcontrol.setCoords();\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index, 100000);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index, newControlIndex) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.pointMoved.bind(this));\n\n\t\t\tthis.controls = Poly.addElementToArrayWithPosition(this.controls, circle, newControlIndex);\n\t\t\tthis.canvas.add(circle);\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tpointMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name,\n\t\t\t\tcenter = point.getCenterPoint();\n\n\t\t\tthis.getElement('#x' + id).value = center.x;\n\t\t\tthis.getElement('#y' + id).value = center.y;\n\t\t}\n\n\t\taddPointBeforeAction(event) {\n\t\t\tlet direction = AreaFormElement.before,\n\t\t\t\tindex = this.points.length,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\t[point, element, currentPointIndex, currentPoint] = this.getPointElementAndCurrentPoint(event, direction);\n\n\t\t\tparentElement.insertBefore(element, currentPoint.element);\n\n\t\t\tthis.points = Poly.addElementToArrayWithPosition(this.points, point, currentPointIndex + direction);\n\t\t\tthis.addControl(this.editor.areaConfig, point, index, currentPointIndex + direction);\n\t\t}\n\n\t\taddPointAfterAction(event) {\n\t\t\tlet direction = AreaFormElement.after,\n\t\t\t\tindex = this.points.length,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\t[point, element, currentPointIndex, currentPoint] = this.getPointElementAndCurrentPoint(event, direction);\n\n\t\t\tif (currentPoint.element.nextSibling) {\n\t\t\t\tparentElement.insertBefore(element, currentPoint.element.nextSibling);\n\t\t\t} else {\n\t\t\t\tparentElement.append(element);\n\t\t\t}\n\n\t\t\tthis.points = Poly.addElementToArrayWithPosition(this.points, point, currentPointIndex + direction);\n\t\t\tthis.addControl(this.editor.areaConfig, point, index, currentPointIndex + direction);\n\t\t}\n\n\t\tgetPointElementAndCurrentPoint(event, direction) {\n\t\t\tlet currentPointId = event.currentTarget.parentNode.parentNode.id,\n\t\t\t\t[currentPoint, nextPoint, currentPointIndex] = this.getCurrentAndNextPoint(currentPointId, direction),\n\t\t\t\tindex = this.points.length,\n\t\t\t\tid = 'p' + this.id + '_' + index,\n\t\t\t\telement = this.getFormElement('#polyCoords', id),\n\t\t\t\tpoint = {\n\t\t\t\t\tx: Math.floor((currentPoint.x + nextPoint.x) / 2),\n\t\t\t\t\ty: Math.floor((currentPoint.y + nextPoint.y) / 2),\n\t\t\t\t\tid: id,\n\t\t\t\t\telement: element\n\t\t\t\t};\n\n\t\t\telement.querySelectorAll('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\n\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\n\t\t\treturn [point, element, currentPointIndex, currentPoint];\n\t\t}\n\n\t\tgetCurrentAndNextPoint(currentPointId, direction) {\n\t\t\tlet currentPointIndex = 0;\n\n\t\t\tfor (let i = 0; i < this.points.length; i++) {\n\t\t\t\tif (this.points[i].id === currentPointId) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcurrentPointIndex++;\n\t\t\t}\n\n\t\t\tlet nextPointIndex = currentPointIndex + direction;\n\n\t\t\tif (nextPointIndex < 0) {\n\t\t\t\tnextPointIndex = this.points.length - 1;\n\t\t\t}\n\t\t\tif (nextPointIndex >= this.points.length) {\n\t\t\t\tnextPointIndex = 0;\n\t\t\t}\n\n\t\t\treturn [this.points[currentPointIndex], this.points[nextPointIndex], currentPointIndex, nextPointIndex];\n\t\t}\n\n\t\tstatic addElementToArrayWithPosition(array, item, newPointIndex) {\n\t\t\tif (newPointIndex < 0) {\n\t\t\t\tarray.unshift(item);\n\t\t\t} else if (newPointIndex >= array.length) {\n\t\t\t\tarray.push(item);\n\t\t\t} else {\n\t\t\t\tlet newPoints = [];\n\t\t\t\tfor (let i = 0; i < array.length; i++) {\n\t\t\t\t\tnewPoints.push(array[i]);\n\t\t\t\t\tif (i === newPointIndex - 1) {\n\t\t\t\t\t\tnewPoints.push(item);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tarray = newPoints;\n\t\t\t}\n\t\t\treturn array;\n\t\t}\n\n\t\tremovePointAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [],\n\t\t\t\t\tcontrols = [];\n\n\t\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t\tcontrols.push(this.controls[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoint.element.remove();\n\t\t\t\t\t\tthis.canvas.remove(this.controls[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpoints.forEach((point, index) => {\n\t\t\t\t\tlet oldId = point.id;\n\t\t\t\t\tpoint.id = 'p' + this.id + '_' + index;\n\t\t\t\t\tthis.getElement('#' + oldId).id = point.id;\n\t\t\t\t\tthis.getElement('#x' + oldId).id = 'x' + point.id;\n\t\t\t\t\tthis.getElement('#y' + oldId).id = 'y' + point.id;\n\t\t\t\t\tthis.getElement('[for=\"x' + oldId + '\"]').setAttribute('for', 'x' + point.id);\n\t\t\t\t\tthis.getElement('[for=\"y' + oldId + '\"]').setAttribute('for', 'y' + point.id);\n\t\t\t\t\tcontrols[index].name = index;\n\t\t\t\t});\n\n\t\t\t\tthis.points = points;\n\t\t\t\tthis.controls = controls;\n\t\t\t\tthis.canvas.renderAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\t/**\n\t\t * @type {AreaEditor}\n\t\t */\n\t\teditor = null;\n\n\t\t/**\n\t\t * Element needed to add inputs that act as target for browselink finalizeFunction target\n\t\t *\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tfauxForm = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = editor.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\n\t\t\tthis.addFauxFormForLinkBrowser(this.editor.browseLink);\n\t\t}\n\n\t\tdestroy() {\n\t\t\tthis.removeFauxForm();\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.editor.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.editor.areas.length) {\n\t\t\t\tlet removedArea = this.editor.areas.splice(index, 1)[0];\n\t\t\t\tthis.editor.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...this.editor.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: this.editor.browseLinkUrlAjaxUrl,\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done((response) => {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\t/**\n\t\t * Triggers change event after faux field was changed by browselink\n\t\t */\n\t\taddFauxFormForLinkBrowser() {\n\t\t\tif (top.document !== this.editor.fauxFormDocument) {\n\t\t\t\tthis.fauxForm = this.editor.fauxFormDocument.createElement('form');\n\t\t\t\tthis.fauxForm.setAttribute('name', this.editor.browseLink.formName);\n\n\t\t\t\tlet fauxFormContainer = this.editor.fauxFormDocument.querySelector('#fauxFormContainer');\n\t\t\t\twhile (fauxFormContainer.firstChild) {\n\t\t\t\t\tfauxFormContainer.removeChild(fauxFormContainer.firstChild);\n\t\t\t\t}\n\t\t\t\tfauxFormContainer.appendChild(this.fauxForm);\n\t\t\t}\n\t\t}\n\n\t\tremoveFauxForm() {\n\t\t\tif (this.fauxForm) {\n\t\t\t\tthis.fauxForm.remove();\n\t\t\t}\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\t/**\n\t\t * @type {Document}\n\t\t */\n\t\tdocument = null;\n\n\t\t/**\n\t\t * @type {Document}\n\t\t */\n\t\tfauxFormDocument = null;\n\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tbrowseLinkUrlAjaxUrl = '';\n\n\t\t/**\n\t\t * @type {object}\n\t\t */\n\t\tbrowseLink = null;\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tpreview = true;\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\tconstructor(options, canvasSelector, formSelector, document) {\n\t\t\tthis.initializeOptions(options);\n\t\t\tthis.document = document;\n\n\t\t\tthis.canvas = new fabric.Canvas(canvasSelector, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\n\t\t\tif (formSelector !== '') {\n\t\t\t\tthis.preview = false;\n\t\t\t\tthis.form = new AreaForm(formSelector, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetScale(scaling) {\n\t\t\tthis.canvas.setZoom(this.canvas.getZoom() * (scaling ? scaling : 1));\n\t\t}\n\n\t\tinitializeAreas(areas) {\n\t\t\tif (areas !== undefined) {\n\t\t\t\tareas.forEach((area) => {\n\t\t\t\t\tswitch (area.shape) {\n\t\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\t\tthis.addRect(area);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\t\tthis.addCircle(area);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\t\tthis.addPoly(area);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tremoveAllAreas() {\n\t\t\tthis.areas.forEach((area) => { area.deleteAction(); });\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, 0.3)\n\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tarea.addControls(this.areaConfig);\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerLinkChanged(id) {\n\t\t\tlet selector = 'form[name=\"' + this.browseLink.formName + '\"] [data-formengine-input-name=\"link' + id + '\"]',\n\t\t\t\tfield = this.fauxFormDocument.querySelector(selector),\n\t\t\t\tevent = this.fauxFormDocument.createEvent('HTMLEvents');\n\t\t\tevent.initEvent('change', false, true);\n\t\t\tfield.dispatchEvent(event);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n\n"]}