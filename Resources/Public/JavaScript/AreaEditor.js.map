{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","mixins","base","args","forEach","mixin","copyProperties","target","source","Object","getOwnPropertyNames","concat","getOwnPropertySymbols","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","id","__uid","hasOwnProperty","attributes","initializeElement","initializeColorPicker","updateFields","initializeEvents","element","getFormElement","constructor","name","toLowerCase","form","areaZone","appendChild","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","on","getElements","field","event","clearTimeout","eventDelay","setTimeout","updateCanvas","button","firstChild","lastChild","currentTarget","contains","link","value","openLinkBrowser","moveArea","deleteArea","remove","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","editor","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","length","Rect","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","getRadiusX","radius","Poly","points","point","index","append","x","y","console","log","areaConfig","circle","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","polygon","type","get","control","getCenterPoint","parentNode","positionOptions","insertBefore","Polygon","AreaForm","formElement","areas","area","postAddToForm","currentArea","offset","indexOf","newIndex","parent","removedArea","splice","childNodes","blur","data","window","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","TYPO3","settings","ajaxUrls","context","done","response","vHWin","open","focus","xml","toAreaXml","options","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","preview","option","scaling","scaleFactor","configuration","getRandomColor","coords","split","right","bottom","strokeWidth","addArea","setControlVisible","coordsXY","i","Error","xy","min","selectable","objectCaching","addControls","syncAreaLinkValue","undefined","random","toString","hex","alpha","chars","test","substring","rgba","numbers","rgb","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(Object.getOwnPropertySymbols(source))\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement {\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.constructor.name.toLowerCase() + 'Form');\n\t\t\tthis.form.areaZone.appendChild(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('.colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.appendChild(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', function(event) {\n\t\t\t\t\tclearTimeout(this.eventDelay);\n\t\t\t\t\tthis.eventDelay = setTimeout(() => {this.updateCanvas(event);}, 500);\n\t\t\t\t}.bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(function (field) {\n\t\t\t\tfield.addEventListener('keyup', this['updateProperties'].bind(this));\n\t\t\t}.bind(this));\n\n\t\t\tthis.getElements('.t3js-btn').forEach(function (button) {\n\t\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t\t}.bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tthis.form.deleteArea(this);\n\t\t\tthis.element.remove();\n\t\t\tthis.form.initializeArrows();\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.constructor.name.toLowerCase() + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth()),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\t\t\t\tlet element = this.getElement('#' + point.id);\n\n\t\t\t\tif (element === null) {\n\t\t\t\t\telement = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tthis.append(element);\n\t\t\t\t}\n\n\t\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tconsole.log(field);\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tresult.push(point.x);\n\t\t\t\tresult.push(point.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t\t...areaConfig,\n\t\t\t\t\thasControls: false,\n\t\t\t\t\tradius: 5,\n\t\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\t\tleft: point.x,\n\t\t\t\t\ttop: point.y,\n\t\t\t\t\toriginX: 'center',\n\t\t\t\t\toriginY: 'center',\n\t\t\t\t\tname: index,\n\t\t\t\t\tpolygon: this,\n\t\t\t\t\ttype: 'control'\n\t\t\t\t});\n\t\t\t\tthis.canvas.add(circle);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target;\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: control.getCenterPoint().x,\n\t\t\t\t\t\ty: control.getCenterPoint().y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddBeforeAction() {\n\t\t}\n\n\t\taddAfterAction() {\n\t\t}\n\n\t\tremoveAction(event) {\n\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\tpoints = [];\n\t\t\tthis.points.forEach((point) => {\n\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t}\n\t\t\t});\n\t\t\telement.remove();\n\t\t\tthis.points = points;\n\t\t\tthis.form.editor.canvas.renderAll();\n\t\t}\n\n\t\tprepend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.firstChild);\n\t\t}\n\n\t\tappend(element) {\n\t\t\tlet positionOptions = this.getElement('.positionOptions');\n\t\t\tpositionOptions.insertBefore(element, positionOptions.lastChild);\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tthis.areas.push(area);\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.editor.deleteArea(area);\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.areas.length) {\n\t\t\t\tlet removedArea = this.areas.splice(index, 1)[0];\n\t\t\t\tthis.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: TYPO3.settings.ajaxUrls['imagemap_browselink_url'],\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done(function (response) {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\tpreview = false;\n\n\t\tconstructor(canvas, form, options) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvas, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\t\t\tif (!this.preview) {\n\t\t\t\tthis.form = new AreaForm(form, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeScaling(scaling) {\n\t\t\tlet width = parseInt(scaling) / this.canvas.width,\n\t\t\t\theight = parseInt(scaling) / this.canvas.height;\n\t\t\treturn (width > height) ? height : width;\n\t\t}\n\t\tsetScale(scaling) {\n\t\t\tthis.scaleFactor = scaling > 1 ? 1 : scaling;\n\t\t}\n\t\tgetMaxWidth() {\n\t\t\treturn this.scaleFactor * this.canvas.width;\n\t\t}\n\t\tgetMaxHeight() {\n\t\t\treturn this.scaleFactor * this.canvas.height;\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tthis.canvas.add(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.001 : 0.2)\n\t\t\t});\n\n\t\t\tthis.canvas.add(area);\n\t\t\tarea.addControls(this.areaConfig);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n"]}