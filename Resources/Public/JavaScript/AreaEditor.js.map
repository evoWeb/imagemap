{"version":3,"sources":["AreaEditor.es6"],"names":["define","$","fabric","Aggregation","baseClass","_len","arguments","length","mixins","Array","_key","base","_baseClass","_getPrototypeOf2","_this","_classCallCheck","this","_len2","args","_key2","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","forEach","mixin","copyProperties","_assertThisInitialized","_inherits","target","source","propertySymbols","Object","getOwnPropertySymbols","getOwnPropertyNames","property","match","defineProperty","getOwnPropertyDescriptor","prototype","AreaFormElement","_fabric$Object","_getPrototypeOf3","_this2","_len3","_key3","_defineProperty","_createClass","key","value","id","__uid","hasOwnProperty","attributes","initializeElement","initializeColorPicker","updateFields","initializeEvents","element","getFormElement","name","form","areaZone","append","initializeArrows","colorPicker","getElement","values","b","g","r","color","cell","document","createElement","style","backgroundColor","classList","add","addEventListener","colorPickerAction","bind","on","getElements","coordinateFieldHandler","attributeFieldHandler","buttonHandler","field","fieldKeyUpHandler","event","_this3","clearTimeout","eventDelay","wait","updateCanvas","updateProperties","button","firstChild","lastChild","currentTarget","contains","link","openLinkBrowser","moveArea","remove","editor","deleteArea","showElement","hideElement","set","AreaEditor","hexToRgbA","rgbAToHex","canvas","renderAll","selector","template","querySelector","innerHTML","replace","RegExp","DOMParser","parseFromString","body","querySelectorAll","getAreaCoords","getAdditionalAttributes","getLink","join","result","push","callback","delay","window","setTimeout","Rect","_Aggregation","_getPrototypeOf4","_this4","_len4","_key4","_this5","alt","Math","floor","left","top","getScaledWidth","getScaledHeight","entries","attribute","parseInt","width","height","Circle","_Aggregation2","_getPrototypeOf5","_this6","_len5","_key5","_this7","getRadiusX","radius","Poly","_Aggregation3","_getPrototypeOf6","_this8","_len6","_key6","Polygon","_this9","parentElement","points","point","index","x","y","_slicedToArray","split","control","controls","getCenterPoint","indexOf","setCoords","center","areaConfig","_this10","addControl","get","polygon","circle","_objectSpread","hasControls","fill","cornerColor","stroke","cornerStrokeColor","originX","originY","type","pointMoved","currentTabId","firstPoint","lastPoint","_this11","parentNode","oldId","setAttribute","AreaForm","formElement","areas","area","postAddToForm","offset","newIndex","parent","removedArea","splice","childNodes","blur","data","imagemap","browseLink","objectId","itemName","currentValue","ajax","url","browseLinkUrlAjaxUrl","context","done","response","open","focus","xml","toAreaXml","options","canvasSelector","formSelector","cornerSize","cornerStyle","hasBorders","hasRotatingPoint","transparentCorners","initializeOptions","Canvas","selection","undefined","preview","option","scaling","setZoom","getZoom","_this12","shape","addRect","addCircle","addPoly","deleteAction","configuration","getRandomColor","_configuration$coords2","coords","right","bottom","selectable","strokeWidth","addArea","_configuration$coords4","setControlVisible","coordsXY","i","Error","xy","min","objectCaching","addControls","syncAreaLinkValue","currentArea","random","toString","hex","alpha","chars","test","substring","rgba","numbers","slice","toUpperCase"],"mappings":"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","file":"AreaEditor.js","sourcesContent":["define(['jquery', 'TYPO3/CMS/Imagemap/Fabric'], ($, fabric) => {\n\tlet Aggregation = (baseClass, ...mixins) => {\n\t\tclass base extends baseClass {\n\t\t\tconstructor (...args) {\n\t\t\t\tsuper(...args);\n\t\t\t\tmixins.forEach((mixin) => {\n\t\t\t\t\tcopyProperties(this, (new mixin));\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// this function copies all properties and symbols, filtering out some special ones\n\t\tlet copyProperties = (target, source) => {\n\t\t\t/** @type {Array} */\n\t\t\tlet propertySymbols = Object.getOwnPropertySymbols(source);\n\t\t\tObject.getOwnPropertyNames(source)\n\t\t\t\t.concat(propertySymbols)\n\t\t\t\t.forEach((property) => {\n\t\t\t\t\tif (!property.match(\n\t\t\t\t\t\t/^(?:constructor|prototype|arguments|caller|name|bind|call|apply|toString|length)$/\n\t\t\t\t\t)) {\n\t\t\t\t\t\tObject.defineProperty(target, property, Object.getOwnPropertyDescriptor(source, property));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t};\n\n\t\t// outside constructor() to allow Aggregation(a, b, c).staticFunction() to be called etc.\n\t\tmixins.forEach((mixin) => {\n\t\t\tcopyProperties(base.prototype, mixin.prototype);\n\t\t\tcopyProperties(base, mixin);\n\t\t});\n\n\t\treturn base;\n\t};\n\n\tclass AreaFormElement extends fabric.Object {\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tname = '';\n\n\t\t/**\n\t\t * @type {ChildNode|HTMLElement}\n\t\t */\n\t\telement = null;\n\n\t\t/**\n\t\t * @type {AreaForm}\n\t\t */\n\t\tform = null;\n\n\t\t/**\n\t\t * @type {number}\n\t\t */\n\t\teventDelay = 0;\n\n\t\tpostAddToForm() {\n\t\t\tthis.id = fabric.Object.__uid++;\n\n\t\t\tif (!this.hasOwnProperty('attributes')) {\n\t\t\t\tthis.attributes = [];\n\t\t\t}\n\n\t\t\tthis.initializeElement();\n\t\t\tthis.initializeColorPicker();\n\t\t\tthis.updateFields();\n\t\t\tthis.initializeEvents();\n\t\t}\n\n\t\tinitializeElement() {\n\t\t\tthis.element = this.getFormElement('#' + this.name + 'Form');\n\t\t\tthis.form.areaZone.append(this.element);\n\t\t\tthis.form.initializeArrows();\n\t\t}\n\n\t\tinitializeColorPicker() {\n\t\t\tlet colorPicker = this.getElement('.colorPicker'),\n\t\t\t\tvalues = ['00', '33', '66', '99', 'CC', 'FF'];\n\n\t\t\tfor (let b = 1; b < 6; b++) {\n\t\t\t\tfor (let g = 1; g < 5; g++) {\n\t\t\t\t\tfor (let r = 1; r < 6; r++) {\n\t\t\t\t\t\tlet color = values[b] + values[g] + values[r],\n\t\t\t\t\t\t\tcell = document.createElement('div');\n\t\t\t\t\t\tcell.id = color;\n\t\t\t\t\t\tcell.style.backgroundColor = '#' + color;\n\t\t\t\t\t\tcell.classList.add('colorPickerCell');\n\t\t\t\t\t\tcell.addEventListener('click', this.colorPickerAction.bind(this));\n\n\t\t\t\t\t\tcolorPicker.append(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tinitializeEvents() {\n\t\t\tthis.on('moved', this.updateFields.bind(this));\n\t\t\tthis.on('modified', this.updateFields.bind(this));\n\n\t\t\tthis.getElements('.positionOptions .t3js-field').forEach(this.coordinateFieldHandler.bind(this));\n\t\t\tthis.getElements('.basicOptions .t3js-field, .attributes .t3js-field').forEach(this.attributeFieldHandler.bind(this));\n\t\t\tthis.getElements('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\t\t}\n\n\t\tcoordinateFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.fieldKeyUpHandler.bind(this));\n\t\t}\n\n\t\tfieldKeyUpHandler(event) {\n\t\t\tclearTimeout(this.eventDelay);\n\t\t\tthis.eventDelay = AreaFormElement.wait(() => { this.updateCanvas(event); }, 500);\n\t\t}\n\n\t\tattributeFieldHandler(field) {\n\t\t\tfield.addEventListener('keyup', this.updateProperties.bind(this));\n\t\t}\n\n\t\tbuttonHandler(button) {\n\t\t\tbutton.addEventListener('click', this[button.id + 'Action'].bind(this));\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tlet areaZone = this.form.areaZone;\n\t\t\tthis.getElement('#up').classList[areaZone.firstChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t\tthis.getElement('#down').classList[areaZone.lastChild !== this.element ? 'remove' : 'add']('disabled');\n\t\t}\n\n\t\tupdateFields() {\n\t\t}\n\n\t\tupdateProperties(event) {\n\t\t\tlet field = event.currentTarget;\n\t\t\tif (field.classList.contains('link')) {\n\t\t\t\tthis.link = field.value;\n\t\t\t} else if (this.hasOwnProperty(field.id)) {\n\t\t\t\tthis[field.id] = field.value;\n\t\t\t} else if (this.attributes.hasOwnProperty(field.id)) {\n\t\t\t\tthis.attributes[field.id] = field.value;\n\t\t\t}\n\t\t}\n\n\t\tupdateCanvas() {\n\t\t}\n\n\n\t\tlinkAction(event) {\n\t\t\tthis.form.openLinkBrowser(event.currentTarget, this);\n\t\t}\n\n\t\tupAction() {\n\t\t\tthis.form.moveArea(this, -1);\n\t\t}\n\n\t\tdownAction() {\n\t\t\tthis.form.moveArea(this, 1);\n\t\t}\n\n\t\tundoAction() {\n\t\t}\n\n\t\tredoAction() {\n\t\t}\n\n\t\tdeleteAction() {\n\t\t\tif (this.element) {\n\t\t\t\tthis.element.remove();\n\t\t\t}\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.initializeArrows();\n\t\t\t}\n\t\t\tthis.editor.deleteArea(this);\n\t\t\tdelete this;\n\t\t}\n\n\t\texpandAction() {\n\t\t\tthis.showElement('.moreOptions');\n\t\t\tthis.hideElement('#expand');\n\t\t\tthis.showElement('#collapse');\n\t\t}\n\n\t\tcollapseAction() {\n\t\t\tthis.hideElement('.moreOptions');\n\t\t\tthis.hideElement('#collapse');\n\t\t\tthis.showElement('#expand');\n\t\t}\n\n\t\tcolorPickerAction(event) {\n\t\t\tlet color = event.currentTarget.style.backgroundColor;\n\t\t\tthis.getElement('#color').style.backgroundColor = color;\n\t\t\tthis.set('borderColor', color);\n\t\t\tthis.set('stroke', color);\n\t\t\tthis.set('fill', AreaEditor.hexToRgbA(AreaEditor.rgbAToHex(color), 0.2));\n\t\t\tthis.editor.canvas.renderAll();\n\t\t}\n\n\n\t\tgetFormElement(selector, id) {\n\t\t\tlet template = this.form.element.querySelector(selector)\n\t\t\t\t.innerHTML.replace(new RegExp('_ID', 'g'), id ? id : this.id);\n\t\t\treturn new DOMParser().parseFromString(template, 'text/html').body.firstChild;\n\t\t}\n\n\t\tgetElement(selector) {\n\t\t\treturn this.element.querySelector(selector);\n\t\t}\n\n\t\tgetElements(selector) {\n\t\t\treturn this.element.querySelectorAll(selector);\n\t\t}\n\n\t\thideElement(selector) {\n\t\t\tthis.getElement(selector).classList.add('hide');\n\t\t}\n\n\t\tshowElement(selector) {\n\t\t\tthis.getElement(selector).classList.remove('hide');\n\t\t}\n\n\n\t\ttoAreaXml() {\n\t\t\treturn [\n\t\t\t\t'<area shape=\"' + this.name + '\"',\n\t\t\t\t' coords=\"' + this.getAreaCoords() + '\"',\n\t\t\t\tthis.getAdditionalAttributes() + '>',\n\t\t\t\tthis.getLink(),\n\t\t\t\t'</area>'\n\t\t\t].join('');\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t}\n\n\t\tgetAdditionalAttributes() {\n\t\t\tlet result = [];\n\n\t\t\tthis.getElements('.t3js-field').forEach((field) => {\n\t\t\t\tif (!field.classList.contains('ignored-attribute')) {\n\t\t\t\t\tswitch (field.id) {\n\t\t\t\t\t\tcase 'color':\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + AreaEditor.rgbAToHex(field.style.backgroundColor) + '\"');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tresult.push(field.id + '=\"' + field.value + '\"');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn (result.length > 0 ? ' ' : '') + result.join(' ');\n\t\t}\n\n\t\tgetLink() {\n\t\t\treturn this.getElement('.link').value;\n\t\t}\n\n\t\tstatic wait(callback, delay) {\n\t\t\treturn window.setTimeout(callback, delay);\n\t\t}\n\t}\n\n\tclass Rect extends Aggregation(fabric.Rect, AreaFormElement) {\n\t\tname = 'rect';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#right').value = Math.floor(this.left + this.getScaledWidth());\n\t\t\tthis.getElement('#bottom').value = Math.floor(this.top + this.getScaledHeight());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#right').value = value + this.getScaledWidth();\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.getElement('#bottom').value = value + this.getScaledHeight();\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'right':\n\t\t\t\t\tvalue = field.value - this.left;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.left + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({width: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bottom':\n\t\t\t\t\tvalue = field.value - this.top;\n\t\t\t\t\tif (value < 0) {\n\t\t\t\t\t\tvalue = 10;\n\t\t\t\t\t\tfield.value = this.top + value;\n\t\t\t\t\t}\n\t\t\t\t\tthis.set({height: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + 0),\n\t\t\t\tMath.floor(this.top + 0),\n\t\t\t\tMath.floor(this.left + this.getScaledWidth() - 1),\n\t\t\t\tMath.floor(this.top + this.getScaledHeight() - 1)\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Circle extends Aggregation(fabric.Circle, AreaFormElement) {\n\t\tname = 'circle';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\t\t\tthis.getElement('#left').value = Math.floor(this.left + 0);\n\t\t\tthis.getElement('#top').value = Math.floor(this.top + 0);\n\t\t\tthis.getElement('#radius').value = Math.floor(this.getRadiusX());\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\tvalue = 0;\n\n\t\t\tswitch (field.id) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({left: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'top':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({top: value});\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'radius':\n\t\t\t\t\tvalue = parseInt(field.value);\n\t\t\t\t\tthis.set({radius: value});\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\treturn [\n\t\t\t\tMath.floor(this.left + this.getRadiusX()),\n\t\t\t\tMath.floor(this.top + this.getRadiusX()),\n\t\t\t\tMath.floor(this.getRadiusX())\n\t\t\t].join(',');\n\t\t}\n\t}\n\n\tclass Poly extends Aggregation(fabric.Polygon, AreaFormElement) {\n\t\tname = 'poly';\n\n\t\tupdateFields() {\n\t\t\tthis.getElement('#color').style.backgroundColor = this.color;\n\t\t\tthis.getElement('#alt').value = this.alt;\n\t\t\tthis.getElement('.link').value = this.link;\n\n\t\t\tObject.entries(this.attributes).forEach((attribute) => {\n\t\t\t\tthis.getElement('#' + attribute[0]).value = attribute[1];\n\t\t\t});\n\n\t\t\tlet parentElement = this.getElement('.positionOptions');\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tpoint.id = point.id ? point.id : 'p' + this.id + '_' + index;\n\n\t\t\t\tif (!point.hasOwnProperty('element')) {\n\t\t\t\t\tpoint.element = this.getFormElement('#polyCoords', point.id);\n\t\t\t\t\tparentElement.append(point.element);\n\t\t\t\t}\n\n\t\t\t\tpoint.element.querySelector('#x' + point.id).value = point.x;\n\t\t\t\tpoint.element.querySelector('#y' + point.id).value = point.y;\n\t\t\t});\n\t\t}\n\n\t\tupdateCanvas(event) {\n\t\t\tlet field = event.currentTarget || event.target,\n\t\t\t\t[, point] = field.id.split('_'),\n\t\t\t\tcontrol = this.controls[parseInt(point)],\n\t\t\t\tx = control.getCenterPoint().x,\n\t\t\t\ty = control.getCenterPoint().y;\n\n\t\t\tif (field.id.indexOf('x') > -1) {\n\t\t\t\tx = parseInt(field.value);\n\t\t\t}\n\t\t\tif (field.id.indexOf('y') > -1) {\n\t\t\t\ty = parseInt(field.value);\n\t\t\t}\n\n\t\t\tcontrol.set('left', x);\n\t\t\tcontrol.set('top', y);\n\t\t\tcontrol.setCoords();\n\t\t\tthis.points[control.name] = {x: x, y: y};\n\t\t\tthis.canvas.renderAll();\n\t\t}\n\n\t\tgetAreaCoords() {\n\t\t\tlet result = [];\n\n\t\t\tthis.controls.forEach((control) => {\n\t\t\t\tlet center = control.getCenterPoint();\n\t\t\t\tresult.push(center.x);\n\t\t\t\tresult.push(center.y);\n\t\t\t});\n\n\t\t\treturn result.join(',');\n\t\t}\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tcontrols = [];\n\n\t\taddControls(areaConfig) {\n\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\tthis.addControl(areaConfig, point, index);\n\t\t\t});\n\n\t\t\tthis.canvas.on('object:moving', (event) => {\n\t\t\t\tif (event.target.get('type') === 'control') {\n\t\t\t\t\tlet control = event.target,\n\t\t\t\t\t\tcenter = control.getCenterPoint();\n\t\t\t\t\tcontrol.polygon.points[control.name] = {\n\t\t\t\t\t\tx: center.x,\n\t\t\t\t\t\ty: center.y\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\taddControl(areaConfig, point, index) {\n\t\t\tlet circle = new fabric.Circle({\n\t\t\t\t...areaConfig,\n\t\t\t\thasControls: false,\n\t\t\t\tradius: 5,\n\t\t\t\tfill: areaConfig.cornerColor,\n\t\t\t\tstroke: areaConfig.cornerStrokeColor,\n\t\t\t\tleft: point.x,\n\t\t\t\ttop: point.y,\n\t\t\t\toriginX: 'center',\n\t\t\t\toriginY: 'center',\n\t\t\t\tname: index,\n\t\t\t\tpolygon: this,\n\t\t\t\ttype: 'control'\n\t\t\t});\n\t\t\tcircle.on('moved', this.pointMoved.bind(this));\n\t\t\tthis.controls[index] = circle;\n\t\t\tthis.canvas.add(circle);\n\t\t}\n\n\t\tpointMoved(event) {\n\t\t\tlet point = event.currentTabId || event.target,\n\t\t\t\tid = 'p' + point.polygon.id + '_' + point.name,\n\t\t\t\tcenter = point.getCenterPoint();\n\n\t\t\tthis.getElement('#x' + id).value = center.x;\n\t\t\tthis.getElement('#y' + id).value = center.y;\n\t\t}\n\n\t\taddPointAction() {\n\t\t\tlet index = this.points.length,\n\t\t\t\tfirstPoint = this.points[0],\n\t\t\t\tlastPoint = this.points[index - 1],\n\t\t\t\tid = 'p' + this.id + '_' + index,\n\t\t\t\tparentElement = this.getElement('.positionOptions'),\n\t\t\t\telement = this.getFormElement('#polyCoords', id),\n\t\t\t\tpoint = {\n\t\t\t\t\tx: (firstPoint.x + lastPoint.x) / 2,\n\t\t\t\t\ty: (firstPoint.y + lastPoint.y) / 2,\n\t\t\t\t\tid: id,\n\t\t\t\t\telement: element\n\t\t\t\t};\n\n\t\t\telement.querySelectorAll('.t3js-btn').forEach(this.buttonHandler.bind(this));\n\n\t\t\telement.querySelector('#x' + point.id).value = point.x;\n\t\t\telement.querySelector('#y' + point.id).value = point.y;\n\n\t\t\tparentElement.append(element);\n\n\t\t\tthis.points.push(point);\n\t\t\tthis.addControl(this.editor.areaConfig, point, index);\n\t\t}\n\n\t\tremovePointAction(event) {\n\t\t\tif (this.points.length > 3) {\n\t\t\t\tlet element = event.currentTarget.parentNode.parentNode,\n\t\t\t\t\tpoints = [],\n\t\t\t\t\tcontrols = [];\n\n\t\t\t\tthis.points.forEach((point, index) => {\n\t\t\t\t\tif (element.id !== point.id) {\n\t\t\t\t\t\tpoints.push(point);\n\t\t\t\t\t\tcontrols.push(this.controls[index]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpoint.element.remove();\n\t\t\t\t\t\tthis.canvas.remove(this.controls[index]);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tpoints.forEach((point, index) => {\n\t\t\t\t\tlet oldId = point.id;\n\t\t\t\t\tpoint.id = 'p' + this.id + '_' + index;\n\t\t\t\t\tthis.getElement('#' + oldId).id = point.id;\n\t\t\t\t\tthis.getElement('#x' + oldId).id = 'x' + point.id;\n\t\t\t\t\tthis.getElement('#y' + oldId).id = 'y' + point.id;\n\t\t\t\t\tthis.getElement('[for=\"x' + oldId + '\"]').setAttribute('for', 'x' + point.id);\n\t\t\t\t\tthis.getElement('[for=\"y' + oldId + '\"]').setAttribute('for', 'y' + point.id);\n\t\t\t\t\tcontrols[index].name = index;\n\t\t\t\t});\n\n\t\t\t\tthis.points = points;\n\t\t\t\tthis.controls = controls;\n\t\t\t\tthis.canvas.renderAll();\n\t\t\t}\n\t\t}\n\t}\n\n\tclass AreaForm {\n\t\t/**\n\t\t * @type {HTMLElement}\n\t\t */\n\t\tareaZone = null;\n\n\t\t/**\n\t\t * @type {AreaEditor}\n\t\t */\n\t\teditor = null;\n\n\t\tconstructor(formElement, editor) {\n\t\t\tthis.element = fabric.document.querySelector(formElement);\n\t\t\tthis.areaZone = this.element.querySelector('#areaZone');\n\t\t\tthis.editor = editor;\n\t\t}\n\n\t\tinitializeArrows() {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tarea.initializeArrows();\n\t\t\t});\n\t\t}\n\n\t\taddArea(area) {\n\t\t\tarea.form = this;\n\t\t\tarea.postAddToForm();\n\t\t}\n\n\t\tmoveArea(area, offset) {\n\t\t\tlet index = this.editor.areas.indexOf(area),\n\t\t\t\tnewIndex = index + offset,\n\t\t\t\tparent = area.element.parentNode;\n\n\t\t\tif (newIndex > -1 && newIndex < this.editor.areas.length) {\n\t\t\t\tlet removedArea = this.editor.areas.splice(index, 1)[0];\n\t\t\t\tthis.editor.areas.splice(newIndex, 0, removedArea);\n\n\t\t\t\tparent.childNodes[index][offset < 0 ? 'after' : 'before'](parent.childNodes[newIndex]);\n\t\t\t}\n\n\t\t\tthis.initializeArrows();\n\t\t}\n\n\t\topenLinkBrowser(link, area) {\n\t\t\tlink.blur();\n\n\t\t\tlet data = {\n\t\t\t\t...window.imagemap.browseLink,\n\t\t\t\tobjectId: area.id,\n\t\t\t\titemName: 'link' + area.id,\n\t\t\t\tcurrentValue: area.getLink()\n\t\t\t};\n\n\t\t\t$.ajax({\n\t\t\t\turl: this.editor.browseLinkUrlAjaxUrl,\n\t\t\t\tcontext: area,\n\t\t\t\tdata: data\n\t\t\t}).done((response) => {\n\t\t\t\tlet vHWin = window.open(\n\t\t\t\t\tresponse.url,\n\t\t\t\t\t'',\n\t\t\t\t\t'height=600,width=500,status=0,menubar=0,scrollbars=1'\n\t\t\t\t);\n\t\t\t\tvHWin.focus()\n\t\t\t});\n\t\t}\n\n\t\tsyncAreaLinkValue(id) {\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\tif (area.id === parseInt(id)) {\n\t\t\t\t\tarea.link = area.getElement('.link').value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\tlet xml = ['<map>'];\n\t\t\tthis.editor.areas.forEach((area) => {\n\t\t\t\txml.push(area.toAreaXml());\n\t\t\t});\n\t\t\txml.push('</map>');\n\t\t\treturn xml.join(\"\\n\");\n\t\t}\n\t}\n\n\tclass AreaEditor {\n\t\tareaConfig = {\n\t\t\tcornerColor: '#eee',\n\t\t\tcornerStrokeColor: '#bbb',\n\t\t\tcornerSize: 10,\n\t\t\tcornerStyle: 'circle',\n\t\t\thasBorders: false,\n\t\t\thasRotatingPoint: false,\n\t\t\ttransparentCorners: false\n\t\t};\n\n\t\t/**\n\t\t * @type {string}\n\t\t */\n\t\tbrowseLinkUrlAjaxUrl = '';\n\n\t\t/**\n\t\t * @type {boolean}\n\t\t */\n\t\tpreview = true;\n\n\t\t/**\n\t\t * @type {Array}\n\t\t */\n\t\tareas = [];\n\n\t\tconstructor(options, canvasSelector, formSelector) {\n\t\t\tthis.initializeOptions(options);\n\n\t\t\tthis.canvas = new fabric.Canvas(canvasSelector, {\n\t\t\t\t...options.canvas,\n\t\t\t\tselection: false\n\t\t\t});\n\n\t\t\tif (formSelector !== undefined) {\n\t\t\t\tthis.preview = false;\n\t\t\t\tthis.form = new AreaForm(formSelector, this);\n\t\t\t}\n\t\t}\n\n\t\tinitializeOptions(options) {\n\t\t\tfor (let option in options) {\n\t\t\t\tif (options.hasOwnProperty(option)) {\n\t\t\t\t\tthis[option] = options[option];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tsetScale(scaling) {\n\t\t\tthis.canvas.setZoom(this.canvas.getZoom() * (scaling ? scaling : 1));\n\t\t}\n\n\t\tinitializeAreas(areas) {\n\t\t\tareas.forEach((area) => {\n\t\t\t\tswitch (area.shape) {\n\t\t\t\t\tcase 'rect':\n\t\t\t\t\t\tthis.addRect(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'circle':\n\t\t\t\t\t\tthis.addCircle(area);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'poly':\n\t\t\t\t\t\tthis.addPoly(area);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tremoveAllAreas() {\n\t\t\tthis.areas.forEach((area) => { area.deleteAction(); });\n\t\t}\n\n\t\taddRect(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, right, bottom] = configuration.coords.split(','),\n\t\t\t\tarea = new Rect({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: parseInt(left),\n\t\t\t\t\ttop: parseInt(top),\n\t\t\t\t\twidth: right - left,\n\t\t\t\t\theight: bottom - top,\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddCircle(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet [left, top, radius] = configuration.coords.split(','),\n\t\t\t\tarea = new Circle({\n\t\t\t\t\t...configuration,\n\t\t\t\t\t...this.areaConfig,\n\t\t\t\t\tselectable: !this.preview,\n\t\t\t\t\thasControls: !this.preview,\n\t\t\t\t\tleft: left - radius,\n\t\t\t\t\ttop: top - radius,\n\t\t\t\t\tradius: parseInt(radius),\n\t\t\t\t\tstroke: configuration.color,\n\t\t\t\t\tstrokeWidth: 1,\n\t\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t\t});\n\n\t\t\tarea.setControlVisible('ml', false);\n\t\t\tarea.setControlVisible('mt', false);\n\t\t\tarea.setControlVisible('mr', false);\n\t\t\tarea.setControlVisible('mb', false);\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\taddPoly(configuration) {\n\t\t\tconfiguration.color = AreaEditor.getRandomColor(configuration.color);\n\t\t\tlet coordsXY = configuration.coords.split(','),\n\t\t\t\tleft = 100000,\n\t\t\t\ttop = 100000,\n\t\t\t\ti = 0,\n\t\t\t\tpoints = [];\n\n\t\t\tif (coordsXY.length % 2) {\n\t\t\t\tthrow new Error('Bad coords count');\n\t\t\t}\n\n\t\t\tfor (; i < coordsXY.length; i = i + 2) {\n\t\t\t\tlet xy = {x: parseInt(coordsXY[i]), y: parseInt(coordsXY[i + 1])};\n\t\t\t\tpoints.push(xy);\n\n\t\t\t\tleft = Math.min(left, xy.x);\n\t\t\t\ttop = Math.min(top, xy.y);\n\t\t\t}\n\n\t\t\tlet area = new Poly(points, {\n\t\t\t\t...configuration,\n\t\t\t\t...this.areaConfig,\n\t\t\t\tselectable: false,\n\t\t\t\tobjectCaching: false,\n\t\t\t\thasControls: !this.preview,\n\t\t\t\ttop: top,\n\t\t\t\tleft: left,\n\t\t\t\tstroke: configuration.color,\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tfill: AreaEditor.hexToRgbA(configuration.color, this.preview ? 0.1 : 0.3)\n\t\t\t});\n\n\t\t\tarea.editor = this;\n\t\t\tthis.canvas.add(area);\n\t\t\tthis.areas.push(area);\n\t\t\tif (this.form) {\n\t\t\t\tarea.addControls(this.areaConfig);\n\t\t\t\tthis.form.addArea(area);\n\t\t\t}\n\t\t}\n\n\t\ttriggerAreaLinkUpdate(id) {\n\t\t\tthis.form.syncAreaLinkValue(id);\n\t\t}\n\n\t\tdeleteArea(area) {\n\t\t\tlet areas = [];\n\t\t\tthis.areas.forEach((currentArea) => {\n\t\t\t\tif (area !== currentArea) {\n\t\t\t\t\tareas.push(currentArea);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.areas = areas;\n\t\t\tthis.canvas.remove(area);\n\t\t}\n\n\t\ttoAreaXml() {\n\t\t\treturn this.form.toAreaXml();\n\t\t}\n\n\t\tstatic getRandomColor(color) {\n\t\t\tif (color === undefined) {\n\t\t\t\tlet r = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tg = (Math.floor(Math.random() * 5) * 3).toString(16),\n\t\t\t\t\tb = (Math.floor(Math.random() * 5) * 3).toString(16);\n\t\t\t\tcolor = '#' + r + r + g + g + b + b;\n\t\t\t}\n\t\t\treturn color;\n\t\t}\n\n\t\tstatic hexToRgbA(hex, alpha) {\n\t\t\tlet chars, r, g, b, result;\n\t\t\tif (/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)) {\n\t\t\t\tchars = hex.substring(1).split('');\n\t\t\t\tif (chars.length === 3) {\n\t\t\t\t\tchars = [chars[0], chars[0], chars[1], chars[1], chars[2], chars[2]];\n\t\t\t\t}\n\n\t\t\t\tr = parseInt(chars[0] + chars[1], 16);\n\t\t\t\tg = parseInt(chars[2] + chars[3], 16);\n\t\t\t\tb = parseInt(chars[4] + chars[5], 16);\n\n\t\t\t\tif (alpha) {\n\t\t\t\t\tresult = 'rgba(' + [r, g, b, alpha].join(', ') + ')';\n\t\t\t\t} else {\n\t\t\t\t\tresult = 'rgb(' + [r, g, b].join(', ') + ')';\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\tthrow new Error('Bad Hex');\n\t\t}\n\n\t\tstatic rgbAToHex(rgba) {\n\t\t\tlet numbers = rgba.replace(/[^0-9,]*/g, '').split(',');\n\n\t\t\tif (numbers.length < 3) {\n\t\t\t\tthrow new Error('Bad rgba');\n\t\t\t}\n\n\t\t\tlet rgb = numbers[2] | (numbers[1] << 8) | (numbers[0] << 16);\n\t\t\treturn '#' + (0x1000000 + rgb).toString(16).slice(1).toUpperCase();\n\t\t}\n\t}\n\n\treturn AreaEditor;\n});\n\n"]}