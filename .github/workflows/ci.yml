name: CI

on:
  push:
    branches: [ develop, master ]
    tags: [ '*' ]
  pull_request:
    branches: [ develop ]

jobs:
  xliff:
    name: XML Lint (Xliff)

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: Install libxml2-utils
        run: |
          sudo apt install libxml2-utils

      - name: Running xmllint (Xliff)
        run: |
          find Resources/Private/Language/ -name '*.xlf' -type f | xargs xmllint --noout --schema .Build/xliff-core-1.2-strict.xsd

  lint:
    name: Lint PHP

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        env:
          - { php: 7.4 }
          - { php: 7.3 }
          - { php: 7.2 }

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v1

      - name: Set up PHP ${php}
        run: |
          sudo update-alternatives --set php /usr/bin/php${php}
          php -v

      - name: Disable xdebug
        run: grep -q xdebug; then phpenv config-rm xdebug.ini; fi

      - name: Running php lint with ${php}
        run: |
          errors=$(find . -name \*.php ! -path "./.Build/*" -exec php -d display_errors=stderr -l "{}" 2>&1 >/dev/null \;) && echo "${errors}" && test -z "${errors}"

  unit:
    name: Run unit tests

    runs-on: ubuntu-18.04

    strategy:
      matrix:
        env:
          - { php: 7.3, TYPO3_VERSION: ^9.5.0, TESTING_FRAMEWORK: ~4.10.0 }
          - { php: 7.2, TYPO3_VERSION: ^9.5.0, TESTING_FRAMEWORK: ~4.10.0 }
          - { php: 7.4, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^6.2.3 }
          - { php: 7.3, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^6.2.3 }
          - { php: 7.2, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^6.2.3 }
          - { php: 7.2, TYPO3_VERSION: ^10.4, TESTING_FRAMEWORK: ^5.0.15, PREFER_LOWEST: "--prefer-lowest" }
          - { php: 7.2, TYPO3_VERSION: "dev-master as 10.4.0", TESTING_FRAMEWORK: ^6.2.3 }

    env: ${{ matrix.env }}

    steps:
      - uses: actions/checkout@v1

      - name: Setup PHP 7.4
        run: sudo update-alternatives --set php /usr/bin/php7.4

      - name: Disable xdebug
        run: grep -q xdebug; then phpenv config-rm xdebug.ini; fi

      - name: Install
        run: |
          export TYPO3_PATH_WEB=$PWD/.Build/Web;
          composer require typo3/cms-core="${TYPO3_VERSION}" ${PREFER_LOWEST};
          if [[ ! -z "${TESTING_FRAMEWORK}" ]]; then composer require --dev typo3/testing-framework="${TESTING_FRAMEWORK}"; fi;
          git checkout composer.json;

      - name: Script
        run: |
          echo "Running ${TYPO3_VERSION} unit tests with $(which php)";
          php .Build/Web/vendor/bin/phpunit --colors -c .Build/Web/vendor/typo3/testing-framework/Resources/Core/Build/UnitTests.xml Tests/Unit/;

  publish:
    needs: [ xliff, lint, unit ]

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v1

      - name: publish in ter
        run: |
          if [[ "${TRAVIS_TAG}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]] && [ -n "${TYPO3_ORG_USERNAME}" ] && [ -n "${TYPO3_ORG_PASSWORD}" ]; then
            echo -e "Preparing upload of release ${TRAVIS_TAG} to TER\n";

            # Install requirements
            composer global require helhum/ter-client

            # Cleanup before we upload
            git reset --hard HEAD && git clean -fx

            # Remove folder that shouldn't to get uploaded
            rm -rf .Build
            rm -rf .github

            # Set version number from tag
            sed -i "s/version' => '.*'/version' => '${TRAVIS_TAG}'/" ext_emconf.php

            # Upload
            TAG_MESSAGE=`git tag -n10 -l ${TRAVIS_TAG} | sed 's/^[0-9.]*[ ]*//g'`
            echo "Uploading release ${TRAVIS_TAG} to TER"
            $HOME/.composer/vendor/bin/ter-client upload imagemap . -u "${TYPO3_ORG_USERNAME}" -p "${TYPO3_ORG_PASSWORD}" -m "${TAG_MESSAGE}"
          fi;
        env:
          TYPO3_ORG_USERNAME: ${{ secrets.TYPO3_ORG_USERNAME }}
          TYPO3_ORG_PASSWORD: ${{ secrets.TYPO3_ORG_PASSWORD }}
